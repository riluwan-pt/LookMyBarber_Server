// barber.prisma
model Barshop {
  id        String   @id @default(uuid()) // âœ… Changed from Int to String
  userId    String   @unique @map("user_id")
  name      String
  address   String
  city      String
  state     String
  zipCode   String   @map("zip_code")
  phone     String
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user      User     @relation("UserBarshop", fields: [userId], references: [id])

  @@map("barshop")
}


// base.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql", "sqlite", "mongodb"
  url      = env("DATABASE_URL")
}

// otp.prisma
model Otp {
  id        String   @id @default(uuid())
  email     String
  code      String
  context   String?   // "signup", "login", etc.
  meta      String?   // hashed password (for signup)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([email])
}

// user.prisma
model User {
  id           String   @id @default(uuid())
  name         String?
  email        String   @unique
  phone        String?  @unique
  passwordHash String?
  role         String   @default("user")
  provider     String?  // "google" | "local"
  providerId   String?  // Google `sub` ID
  isVerified   Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  barshop      Barshop?  @relation("UserBarshop")

}
